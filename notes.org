* Setup Notes / Attempt To Deploy On Render.com
<2022-11-09 Wed 18:42>: I set this lab up initially with these commands:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects$ git clone git@github.com:learn-co-curriculum/project-template-react-rails-api.git CraigsCookout
Cloning into 'CraigsCookout'...
remote: Enumerating objects: 165, done.
remote: Counting objects: 100% (12/12), done.
remote: Compressing objects: 100% (8/8), done.
remote: Total 165 (delta 6), reused 10 (delta 4), pack-reused 153
Receiving objects: 100% (165/165), 406.07 KiB | 3.17 MiB/s, done.
Resolving deltas: 100% (41/41), done.

sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects$ cd CraigsCookout/
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ git remote rm origin
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ git remote add origin git@github.com:SamuelBanya/CraigsCookout.git
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ git push -u origin main
Enumerating objects: 165, done.
Counting objects: 100% (165/165), done.
Delta compression using up to 8 threads
Compressing objects: 100% (110/110), done.
Writing objects: 100% (165/165), 406.06 KiB | 25.38 MiB/s, done.
Total 165 (delta 41), reused 165 (delta 41), pack-reused 0
remote: Resolving deltas: 100% (41/41), done.
To github.com:SamuelBanya/CraigsCookout.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
#+end_src

I then ran these commands to install the dependencies:
#+begin_src bash
bundle install
rails db:create
npm install --prefix client
#+end_src

<2022-11-09 Wed 18:46>: I tried 'bundle install' but received this specific error in '/usr/share/rvm/gems/ruby-2.7.4/extensions/x86_64-linux/2.7.0/pg-1.2.3/mkmf.log':
#+begin_src bash
conftest.c:3:10: fatal error: libpq-fe.h: No such file or directory
#+end_src

I then found this StackOverflow post:
- https://stackoverflow.com/questions/50272096/pg-1-0-0-fatal-error-libpq-fe-h-file-not-found

I then installed 'libpq-dev' with this command:
#+begin_src bash
sudo apt install libpq-dev
#+end_src

<2022-11-09 Wed 18:56>: I then installed the 'PostgresSQL' dependencies via these commands:
#+begin_src bash
sudo apt update
sudo apt install postgresql postgresql-contrib libpq-dev
#+end_src

I then verified the installation via the 'psql --version' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ psql --version
psql (PostgreSQL) 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)
#+end_src

I then started the 'psql' service with the 'sudo service postgresql start' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ sudo service postgresql start
 * Starting PostgreSQL 14 database server
#+end_src

I checked what the operating system name was under WSL2 with the 'whoami' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ whoami
sam
#+end_src

I then created a 'postgres' user with the following command:
#+begin_src bash
sudo -u postgres -i

sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ sudo -u postgres -i
Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.10.102.1-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

This message is shown once a day. To disable it please create the
/var/lib/postgresql/.hushlogin file.
postgres@HTCSamuelB:~$ createuser -sr sam
postgres@HTCSamuelB:~$
logout
#+end_src

I then went to my Render.com account, and created a new 'PostgresSQL' instance and named it 'psql'.

<2022-11-09 Wed 19:04>: I then proceeded to follow the 'Deploying' steps.

I then deleted the 'Master Key File', 'config/credentials.yml.enc'.

I then ran the following command in terminal:
#+begin_src bash
EDITOR="code --wait" bin/rails credentials:edit
#+end_src

I then copied the credentials that popped up in a new VS Code buffer into a scratch buffer in Emacs so that I can later use them on Render.com

I then went to the 'craigscookoutpsql' instance on Render.com, and clicked 'Connect' > External Connection, and utilized the related 'PSQL' terminal command present so that I can connect to the database.

I then used the following SQL command while connected to the 'PSQL' instance:
#+begin_src bash
CREATE DATABASE craigscookout_db
#+end_src

I then verified my work by using the '\l' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ PGPASSWORD=UwAqth4KzvZI83dlq5FNJm7w4AXqHHng psql -h dpg-cdm54o2rrk0d9h01tv6g-a.ohio-postgres.render.com -U psql_pbn2_user psql_pbn2
psql (14.5 (Ubuntu 14.5-0ubuntu0.22.04.1), server 15.0)
WARNING: psql major version 14, server major version 15.
         Some psql features might not work.
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_128_GCM_SHA256, bits: 128, compression: off)
Type "help" for help.

psql_pbn2=> CREATE DATABASE craigscookout_db;
CREATE DATABASE

psql_pbn2=> \l
                                       List of databases
       Name       |     Owner      | Encoding |  Collate   |   Ctype    |   Access privileges
------------------+----------------+----------+------------+------------+-----------------------
 craigscookout_db | psql_pbn2_user | UTF8     | en_US.UTF8 | en_US.UTF8 |
 postgres         | postgres       | UTF8     | en_US.UTF8 | en_US.UTF8 |
 psql_pbn2        | psql_pbn2_user | UTF8     | en_US.UTF8 | en_US.UTF8 |
 template0        | postgres       | UTF8     | en_US.UTF8 | en_US.UTF8 | =c/postgres          +
                  |                |          |            |            | postgres=CTc/postgres
 template1        | postgres       | UTF8     | en_US.UTF8 | en_US.UTF8 | =c/postgres          +
                  |                |          |            |            | postgres=CTc/postgres
#+end_src

I then used the '\q' command to exit PSQL.

I then created a new Render Web Service by clicking the "New +" button > Web Service, and found the 'CraigsCookout' GitHub repo.

I then set the 'Build' command to:
./bin/render-build.sh

I then set the 'Start' command to 'bundle exec puma -C config/puma.rb'

I then opened up a separate tab and navigated to the 'psql' PostgreSQL instance and went to Connection > Internal Database URL, and copied the URL.

I then returned to the 'CraigsCookout' tab in Render.com, and went to Advanced > Add Environment Variable, and used:
#+begin_src bash
DATABASE_URL (pasted the Internal Database URL I copied --> I replaced the very last section with 'craigscookout_db')
#+end_src

I then clicked the 'Add Environment Variable' button again, and added:
#+begin_src bash
RAILS_MASTER_KEY (inserted 'secret_key_base' value from earlier from the secrets file generated in VS Code)
#+end_src

<2022-11-09 Wed 20:10>: The Render.com deployment is not going well, and I blame the main GitHub repo for probably not having tested this whole process themselves recently since it doesn't even work.

With this in mind, I had to adjust the React 'scripts' in 'client/package.json' with the following revisions to add the '--openssl-legacy-provider' parameter due to the '' error I received:
Related 'ERR_OSSL_EVP_UNSUPPORTED' error I received
#+begin_src bash
 opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],
  library: 'digital envelope routines',
  reason: 'unsupported',
  code: 'ERR_OSSL_EVP_UNSUPPORTED'
}
#+end_src

Related revision to include '--openssl-legacy-provider' parameter in 'client/package.json' manifest file:
#+begin_src js
  "scripts": {
    "start": "PORT=4000 react-scripts --openssl-legacy-provider start",
    "build": "react-scripts --openssl-legacy-provider build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
#+end_src

* Relationships For Phase 4 Project Requirements
<2022-11-09 Wed 20:21>: These are the table relationships I currently have:

- User:
#+begin_src ruby
has_many :cookouts
has_many :foods
through: :cookouts
#+end_src
- Cookout:
#+begin_src ruby
belongs_to :food
belongs_to :user
#+end_src
- Food:
#+begin_src ruby
has_many :cookouts
has_many :users
through: :cookouts
#+end_src

I then started by creating the associated user model accordingly with the 'rails g model user --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g model user --no-test-framework
Running via Spring preloader in process 15357
      invoke  active_record
      create    db/migrate/20221110022549_create_users.rb
      create    app/models/user.rb
#+end_src

I then modified the corresponding migration file, 'db/migrate/20221110022549_create_users.rb' with the following contents:
#+begin_src ruby
class CreateUsers < ActiveRecord::Migration[6.1]
  def change
    create_table :users do |t|
      t.string :username
      t.string :password_digest

      t.timestamps
    end
  end
end
#+end_src

I then modified the associated 'app/models/user.rb' model file with the following contents to include the related Active Record associations:
#+begin_src ruby
class User < ApplicationRecord
    has_many :cookouts
    has_many :foods, through: :cookouts

    has_secure_password

    validates :username, presence: true, uniqueness: true
end
#+end_src

I then created a related model for the 'Cookout' model with the 'rails g model cookout --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g model user --no-test-frameworkCookout$ rails g model cookout --no-test-framework
Running via Spring preloader in process 15383
      invoke  active_record
      create    db/migrate/20221110023307_create_cookouts.rb
      create    app/models/cookout.rb
#+end_src

I then revised the 'db/migrate/20221110023307_create_cookouts.rb' migration file for the 'Cookout' model with the following contents:
#+begin_src ruby
class CreateCookouts < ActiveRecord::Migration[6.1]
  def change
    create_table :cookouts do |t|
      t.belongs_to :user, null: false, foreign_key: true
      t.belongs_to :food, null: false, foreign_key: true
      t.string :name
      t.string :start_time
      t.string :end_time

      t.timestamps
    end
  end
end
#+end_src

I then modified the 'app/models/cookout.rb' Cookout model with the following contents:
#+begin_src ruby
class Cookout < ApplicationRecord
    belongs_to :user

    validates :name, presence: true
    validates :start_time, presence: true
    validates :end_time, presence: true
end
#+end_src

I then created a related model for the 'Food' model with the 'rails g model food --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g model food --no-test-framework
Running via Spring preloader in process 15424
      invoke  active_record
      create    db/migrate/20221110024427_create_foods.rb
      create    app/models/food.rb
#+end_src

I then edited the corresponding 'db/migrate/20221110024427_create_foods.rb' migration file to include the following changes:
#+begin_src ruby
class CreateFoods < ActiveRecord::Migration[6.1]
  def change
    create_table :foods do |t|
      t.string :name

      t.timestamps
    end
  end
end
#+end_src

I then revised the corresponding model in the 'app/models/food.rb' file with the following contents:
#+begin_src ruby
class Food < ApplicationRecord
    has_many :cookouts
    has_many :users, through: :cookouts

    validates :name, presence: true
end
#+end_src

I then ran the corresponding 'rails db:migrate' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails db:migrate
== 20221110022549 CreateUsers: migrating ======================================
-- create_table(:users)
   -> 0.0102s
== 20221110022549 CreateUsers: migrated (0.0103s) =============================

== 20221110023307 CreateCookouts: migrating ===================================
-- create_table(:cookouts)
   -> 0.0048s
== 20221110023307 CreateCookouts: migrated (0.0049s) ==========================

== 20221110024427 CreateFoods: migrating ======================================
-- create_table(:foods)
   -> 0.0093s
== 20221110024427 CreateFoods: migrated (0.0094s) =============================
#+end_src

I then worked on creating the 'Sign Up' feature by creating the 'UsersController' with the 'rails g controller users_controller --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g controller users_controller --no-test-framework
Running via Spring preloader in process 15460
      create  app/controllers/users_controller.rb
#+end_src

I then modified the 'app/controllers/users_controller.rb' Users Controller file with the following revisions:
#+begin_src ruby
class UsersController < ApplicationController
    skip_before_action :authorize, only: :create

    def create
        user = User.create!(user_params)
        session[:user_id] = user.id
        render json: user, status: :created
    end

    def show
        render json: @current_user
    end

    private

    def user_params
        params.permit(:username, :password, :password_confirmation)
    end
end
#+end_src

I then modified the 'config/routes.rb' routes file to accommodate the 'users#create' method for the 'Sign Up' portion, and also the 'users#show' method to accommodate the automatic sign-in portion for the 'get /me' route:
#+begin_src ruby
Rails.application.routes.draw do

  # Routing logic: fallback requests for React Router.
  # Leave this here to help deploy your app later!
  resources :cookouts, only: [:index, :create]
  resources :foods, only: [:index, :create]
  post "/signup", to: "users#create"
  get "/me", to: "users#show"
  get "*path", to: "fallback#index", constraints: ->(req) { !req.xhr? && req.format.html? }
end
#+end_src

I then modified the overarching parent 'ApplicationController' within the 'app\controllers\application_controller.rb' file with the following contents:
#+begin_src ruby
class ApplicationController < ActionController::API
  include ActionController::Cookies

rescue_from ActiveRecord::RecordInvalid, with: :render_unprocessable_entity_response

before_action :authorize

private

def authorize
  @current_user = User.find_by(id: session[:user_id])

  render json: { errors: ["Not authorized"] }, status: :unauthorized unless @current_user
end

def render_unprocessable_entity_response(exception)
  render json: { errors: exception.record.errors.full_messages }, status: :unprocessable_entity
end

end
#+end_src

I then created a corresponding 'User' serializer with the 'rails g serializer user --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g serializer user --no-test-framework
Running via Spring preloader in process 15524
      create  app/serializers/user_serializer.rb
#+end_src

I then modified the contents of the 'app/serializers/user_serializer.rb' serializer with the following:
#+begin_src ruby
class UserSerializer < ActiveModel::Serializer
  attributes :id, :username
end
#+end_src

I then created the 'Login' feature by creating a 'SessionsController' with the 'rails g controller sessions_controller --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g controller sessions_controller --no-test-framework
Running via Spring preloader in process 15551
      create  app/controllers/sessions_controller.rb
#+end_src

I then modified the 'config/routes.rb' routes file with the following revisions:
#+begin_src ruby
Rails.application.routes.draw do

  # Routing logic: fallback requests for React Router.
  # Leave this here to help deploy your app later!
  resources :cookouts, only: [:index, :create]
  resources :foods, only: [:index, :create]
  post "/signup", to: "users#create"
  get "/me", to: "users#show"
  post "/login", to: "sessions#create"
  get "*path", to: "fallback#index", constraints: ->(req) { !req.xhr? && req.format.html? }
end
#+end_src

I then modified the contents of the 'app/controllers/sessions_controller.rb' Sessions Controller file with the following revisions for the 'create' method to log the user in:
#+begin_src ruby
class SessionsController < ApplicationController
    skip_before_action :authorize, only: :create

    def create
        user = User.find_by(username: params[:username])
        if user&.authenticate(params[:password])
            session[:user_id] = user.id
            render json: user
        else
            render json: { errors: ["Invalid username or password"] }, status: :unauthorized
        end
    end
end
#+end_src

I then added the 'Logout' feature by adding the 'DELETE /logout' route to the 'config/routes.rb' routes file:
#+begin_src ruby
Rails.application.routes.draw do

  # Routing logic: fallback requests for React Router.
  # Leave this here to help deploy your app later!
  resources :cookouts, only: [:index, :create]
  resources :foods, only: [:index, :create]
  post "/signup", to: "users#create"
  get "/me", to: "users#show"
  post "/login", to: "sessions#create"
  delete "/logout", to: "sessions#destroy"
  get "*path", to: "fallback#index", constraints: ->(req) { !req.xhr? && req.format.html? }
end
#+end_src

I then modified the 'app/controllers/sessions_controller.rb' Sessions controller to also handle a 'destroy' route to log the user out:
#+begin_src ruby
class SessionsController < ApplicationController
    skip_before_action :authorize, only: :create

    def create
        user = User.find_by(username: params[:username])
        if user&.authenticate(params[:password])
            session[:user_id] = user.id
            render json: user
        else
            render json: { errors: ["Invalid username or password"] }, status: :unauthorized
        end
    end

    def destroy
        session.delete :user_id
        head :no_content
    end
end
#+end_src

I then created the 'Cookouts' controller with the 'rails g controller cookouts_controller --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g controller cookouts_controller --no-test-framework
Running via Spring preloader in process 15600
      create  app/controllers/cookouts_controller.rb
#+end_src

I then revised the contents of the 'app/controllers/cookouts_controller.rb' Cookouts Controller with the following contents to include the 'index' method:
#+begin_src ruby
class CookoutsController < ApplicationController
    def index
        render json: Cookout.all
    end
end
#+end_src

I then further revised the 'Cookouts Controller' to include the 'create' method as well:
#+begin_src ruby
class CookoutsController < ApplicationController
    def index
        render json: Cookout.all
    end

    def create
        cookout = @current_user.cookouts.create!(cookout_params)
        render json: cookout, status: :created
    end

    private

    def cookout_params
        params.permit(:name, :start_time, :end_time)
    end
end
#+end_src

I then created a related serializer with the 'rails g serializer cookout --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g serializer cookout --no-test-framework
Running via Spring preloader in process 15621
      create  app/serializers/cookout_serializer.rb
#+end_src

I then modified the contents of the 'app/serializers/cookout_serializer.rb' Serializer with the following:
#+begin_src ruby
class CookoutSerializer < ActiveModel::Serializer
  attributes :id, :name, :start_time, :end_time
end
#+end_src


I then created the "Food" controller with the "rails g controller foods_controller --no-test-framework" command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g controller foods_controller --no-test-framework
Running via Spring preloader in process 15650
      create  app/controllers/foods_controller.rb
#+end_src

I then revised the 'app/controllers/foods_controller.rb' Foods Controller file with the following revisions to include the 'index' and 'create' methods:
#+begin_src ruby
class FoodsController < ApplicationController
    def index
        render json: Food.all
    end

    def create
        food = @current_user.foods.create!(food_params)
        render json: food, status: :created
    end

    private

    def food_params
        params.permit(:name)
    end
end
#+end_src

I then created a related serializer with the 'rails g serializer food --no-test-framework' command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g serializer food --no-test-framework~
Running via Spring preloader in process 15669
      create  app/serializers/food_serializer.rb
#+end_src

I then modified the contents of the 'app/serializers/food_serializer.rb' Food Serializer with the following:
#+begin_src ruby
class FoodSerializer < ActiveModel::Serializer
  attributes :id, :name
end
#+end_src
* How I Ported Over The 'Login' Page From A Related Lab
<2022-11-09 Wed 21:26>: NOTE:
- My next goal is to carry over the entire login page process as well as its corresponding styling into this project successfully:
- https://github.com/SamuelBanya/phase-4-rails-putting-it-all-together-auth/tree/main/client/src/components
- https://github.com/SamuelBanya/phase-4-rails-putting-it-all-together-auth/blob/main/client/src/components/App.js
- https://github.com/SamuelBanya/phase-4-rails-putting-it-all-together-auth/blob/main/client/src/components/LoginForm.js
- https://github.com/SamuelBanya/phase-4-rails-putting-it-all-together-auth/blob/main/client/src/components/NavBar.js
- https://github.com/SamuelBanya/phase-4-rails-putting-it-all-together-auth/blob/main/client/src/components/SignUpForm.js
- After I am done doing so, I will follow the related guide on how to incorporate Tailwind CSS into my project:
- https://tailwindcss.com/

<2022-11-10 Thu 16:41>: I am in the process of porting over the 'Login' form's components from this lab:
-

I have had to install the React V6 style routing dom components with this command which I got from the notes from my previous Phase 3 project (https://github.com/SamuelBanya/SmoothMoves/blob/main/smoothmoves.org):
#+begin_src bash
npm install react-router-dom@6
#+end_src

<2022-11-10 Thu 16:54>: I also had to install 'styled-components' for the login page (https://styled-components.com/) with this command:
#+begin_src bash
npm install styled-components
#+end_src

<2022-11-11 Fri 08:53>: When I tried running the app this morning, I received this error:
#+begin_src bash
×
TypeError: Cannot read properties of null (reading 'useRef')
useRef
node_modules/react/cjs/react.development.js:1630
  1627 | }
  1628 | function useRef(initialValue) {
  1629 |   var dispatcher = resolveDispatcher();
> 1630 |   return dispatcher.useRef(initialValue);
  1631 | }
  1632 | function useEffect(create, deps) {
  1633 |   var dispatcher = resolveDispatcher();
#+end_src

I looked into this and found this random GitHub Errors page on this same issue in which the affected user had a higher version of React being pulled in than the main version of React for his project:
- https://github.com/nandorojo/moti/issues/189

That same user was instructed to run 'npm why react', which I did, and this revealed that I had the same issue of React having a higher version as a result of the V6 style routing dependencies I pulled in:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ npm why react
react@18.2.0 peer
node_modules/react
  peer react@"^18.2.0" from react-dom@18.2.0
  node_modules/react-dom
    peer react-dom@">=16.8" from react-router-dom@6.4.3
    node_modules/react-router-dom
      react-router-dom@"^6.4.3" from the root project
    peer react-dom@">= 16.8.0" from styled-components@5.3.6
    node_modules/styled-components
      styled-components@"^5.3.6" from the root project
      peer styled-components@">= 2" from babel-plugin-styled-components@2.0.7
      node_modules/babel-plugin-styled-components
        babel-plugin-styled-components@">= 1.12.0" from styled-components@5.3.6
  peer react@">=16.8" from react-router@6.4.3
  node_modules/react-router
    react-router@"6.4.3" from react-router-dom@6.4.3
    node_modules/react-router-dom
      react-router-dom@"^6.4.3" from the root project
  peer react@">=16.8" from react-router-dom@6.4.3
  node_modules/react-router-dom
    react-router-dom@"^6.4.3" from the root project
  peer react@">= 16.8.0" from styled-components@5.3.6
  node_modules/styled-components
    styled-components@"^5.3.6" from the root project
    peer styled-components@">= 2" from babel-plugin-styled-components@2.0.7
    node_modules/babel-plugin-styled-components
      babel-plugin-styled-components@">= 1.12.0" from styled-components@5.3.6
#+end_src

I then added the '"resolutions": { "react": "17.0.2" }' to my existing React project's 'client/package.json' manifest file:
#+begin_src json
{
  "name": "phase-4-rails-putting-it-all-together-auth-client",
  "version": "0.1.0",
  "private": true,
  "proxy": "http://localhost:3000",
  "dependencies": {
    "@testing-library/jest-dom": "^5.12.0",
    "@testing-library/react": "^11.2.7",
    "@testing-library/user-event": "^12.8.3",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-markdown": "^6.0.2",
    "react-router-dom": "^5.2.0",
    "react-scripts": "4.0.3",
    "styled-components": "^5.3.0",
    "web-vitals": "^1.1.2"
  },
  "scripts": {
    "start": "PORT=4000 react-scripts --openssl-legacy-provider start",
    "build": "react-scripts --openssl-legacy-provider build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "resolutions": {
    "react": "17.0.2"
  }
}
#+end_src

<2022-11-11 Fri 09:32>: I then found this GitHub issues page:
- https://github.com/facebook/react/issues/18866

This made me think that the issue is with the routing declared in the 'client/src/index.js' file, so I revised it with the following changes:
#+begin_src js
import React from "react";
// import ReactDOM from "react-dom";
import ReactDOM from "react-dom/client";
import App from "./components/App";
// import { BrowserRouter } from "react-router-dom";
import {  BrowserRouter, Routes, Route } from "react-router-dom";
import { createGlobalStyle } from "styled-components";

const GlobalStyle = createGlobalStyle`
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  html, body {
    margin: 0;
  }

  body {
    font-family: BlinkMacSystemFont,-apple-system,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",Helvetica,Arial,sans-serif;
  }
`;

// ReactDOM.render(
//   <BrowserRouter>
//     <GlobalStyle />
//     <App />
//   </BrowserRouter>,
//   document.getElementById("root")
// );

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <BrowserRouter>
    <Routes>
      <Route path="/*" element={<App />} />
    </Routes>
</BrowserRouter>
);

#+end_src

<2022-11-11 Fri 09:37>: Unfortunately, this didn't help solve my issue.

<2022-11-17 Thu 16:11>: I was able to resolve my issue the other day by using 'rails db:migrate' as there were pending migrations. This solved the issue that prevented me from utilizing the Login page successfully.

Another note to make is that I made HEAVY use of my Phase 3 project since I didn't want to have to re-create the wheel with React controlled forms in action as that would be dumb to do, aka just use what was done previously.
* Inclusion Of react-datetime-picker
<2022-11-17 Thu 16:15>: I tried to utilize this particular library into my project to allow a user to pick a specific date timestamp, aka 'react-datetime-picker'.

Related links:
- https://www.npmjs.com/package/react-datetime-picker
- https://projects.wojtekmaj.pl/react-datetime-picker/

I had to install the package via this command:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ npm install react-datetime-picker
#+end_src

<2022-11-17 Thu 16:58>: I got some errors while using this library so I decided to can the idea.

* Addition Of Environment Variable To Accomomdate WSL2 On Windows 10 For Hot Reloading Project Automatically
<2022-11-22 Tue 19:04>: I noticed that while running and deploying my project on Windows 10, React took forever to load, and also didn't do one major thing that I noticed while on MacOS:
- The ability to hot reload a project while you save a component

I looked into this and found this GitHub Issues page on this same topic:
- https://github.com/facebook/create-react-app/issues/10253

I then noticed that there exists TWO solutions to note for the future which depend upon React Scripts Version 4 OR React Scripts Version 5:
- The React Scripts Version 4 fix is to use the following:
#+begin_src json
"scripts": {
    "start": "CHOKIDAR_USEPOLLING=true react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  }
#+end_src
- The React Scripts Version 5 fix is to use the following:
#+begin_src json
"scripts": {
    "start": "WATCHPACK_POLLING=true react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  }
#+end_src

I did the React Scripts Version 4 fix above in my scenario.
* How I Added A '/locations' Route To The Project, And Re-Thought My 'Entity Relationship Diagram' (ERD)
<2022-11-25 Fri 14:24>: In order to make it more align to my final goals, I went ahead and created another route for '/locations' by first creating a related migration accordingly:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails g migration create_locations --no-test-framework
Running via Spring preloader in process 1174
      invoke  active_record
      create    db/migrate/20221125201828_create_locations.rb
#+end_src

I then proceeded to drop the database table, and then re-migrate and re-seed the project:
#+begin_src bash
sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails db:drop
Dropped database 'react_rails_api_project_template_development'
Dropped database 'react_rails_api_project_template_test'

sam@HTCSamuelB:/mnt/c/Users/Samuel.Banya/Documents/FlatironSchoolProjects/CraigsCookout$ rails db:migrate db:seed
#+end_src

I then created a related model in 'app/models/location.rb' accordingly:
#+begin_src ruby
class Location < ApplicationRecord
    belongs_to :cookout

    validates :name, presence: true
end
#+end_src

I then modified the 'app/models/cookout.rb' Cookout model to include the related 'has_one' relationship since each individual cookout will only have one location:
#+begin_src ruby
class Cookout < ApplicationRecord
    has_many :foods
    has_many :users, through: :foods
    has_one :location

    validates :name, presence: true
    validates :start_time, presence: true
    validates :end_time, presence: true
end
#+end_src

<2022-11-25 Fri 14:30>: With this in mind, here is my modified 'Entity Relationship Diagram':
- User:
+ has_many :foods
+ has_many :cookouts
+ through: :foods
- Cookout:
+ has_many :foods
+ has_many :users, through: :foods
+ has_one :location
- Food:
+ belongs_to :user
+ belongs_to :cookout
- Location:
+ belongs_to: :cookout

<2022-11-25 Fri 15:50>: My current issue with this relationship is that if I currently try to create a 'cookout', I get a 'Name can't be blank' error from the related cookout serializer after the Cookout Controller's create method caused it to fire.

The form itself has the correct 'name' attribute so this is weird. Also, the corresponding Rails console output shows that a proper 'name' was provided as well.

<2022-11-25 Fri 16:39>: What still needs to be done:
- [ ] I should create a corresponding seeds file once I figure out the related models present
- [ ] I need to be able to create a new cookout
- [ ] The 'ChooseCookoutDropdown' React component needs to actually work to pull down the latest cookouts, and should be able to be used in any subsequent form with values passed by props somehow
- [ ] I need to be able to edit an existing cookout
- [ ] I need to be able to delete an existing cookout
- [ ] I need to be able to add a new food to a cookout
- [ ] The 'Choose a Food' dropdown list within the 'EditForm' React component needs to be pre-populated with values from that specific cookout's foods since each cookout has a specific list of foods from the given user
- [ ] I should be able to edit a given food
- [ ] I should be able to delete a given food
- [ ] I should be able to add a single new location to a cookout
- [ ] I should be able to edit that given location for the cookout
- [ ] I should be able to delete that given location for the cookout
- [ ] I should be able to view a prepopulated ul and li item based list on the 'View Cookouts' tab for the application to see all cookouts from all users so far
